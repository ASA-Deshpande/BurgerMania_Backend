// <auto-generated />
using System;
using BurgerMania.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BurgerMania.Migrations
{
    [DbContext(typeof(BurgerManiaContext))]
    [Migration("20240810101247_2_makingnullable")]
    partial class _2_makingnullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BurgerMania.Models.Burger", b =>
                {
                    b.Property<Guid>("burgerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("burgerId");

                    b.ToTable("burger", "BurgerShopSchemaFF");
                });

            modelBuilder.Entity("BurgerMania.Models.OrderItem", b =>
                {
                    b.Property<Guid>("orderItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BurgerID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.HasKey("orderItemId");

                    b.HasIndex("BurgerID");

                    b.HasIndex("OrderID");

                    b.ToTable("orderItem", "BurgerShopSchemaFF");
                });

            modelBuilder.Entity("BurgerMania.Models.Orders", b =>
                {
                    b.Property<Guid>("orderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("totAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("orderId");

                    b.HasIndex("UserID");

                    b.ToTable("order", "BurgerShopSchemaFF");
                });

            modelBuilder.Entity("BurgerMania.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phnNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("user", "BurgerShopSchemaFF");
                });

            modelBuilder.Entity("BurgerMania.Models.OrderItem", b =>
                {
                    b.HasOne("BurgerMania.Models.Burger", "Burger")
                        .WithMany("OrderItems")
                        .HasForeignKey("BurgerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerMania.Models.Orders", "Orders")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Burger");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BurgerMania.Models.Orders", b =>
                {
                    b.HasOne("BurgerMania.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BurgerMania.Models.Burger", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("BurgerMania.Models.Orders", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("BurgerMania.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
